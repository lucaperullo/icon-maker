# .github/workflows/release.yml
name: Build and Release

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*' # Triggers on version tags like v1.0.0

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Package application
        run: npm run package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Windows installer
        id: find-windows-installer
        run: |
          $installer = Get-ChildItem -Path "release/build" -Filter "*.exe" | Select-Object -First 1
          if ($installer) {
            echo "installer-path=$($installer.FullName)" >> $env:GITHUB_OUTPUT
            echo "installer-name=IconForge-AI-Setup-${{ github.ref_name }}.exe" >> $env:GITHUB_OUTPUT
          }
        shell: powershell

      - name: Upload Windows installer to release
        if: steps.find-windows-installer.outputs.installer-path && github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.find-windows-installer.outputs.installer-path }}
          asset_name: ${{ steps.find-windows-installer.outputs.installer-name }}
          asset_content_type: application/octet-stream

      # Alternative: Upload as artifacts if no release event
      - name: Upload artifacts
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: release/build/*.exe